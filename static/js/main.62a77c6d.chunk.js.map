{"version":3,"sources":["App.js","serviceWorker.js","config.js","index.js"],"names":["layerTypes","fill","line","circle","symbol","raster","alignments","left","center","right","transformRequest","url","hasQuery","indexOf","Chapter","id","theme","title","image","description","classList","currentChapterID","className","src","alt","App","props","state","currentChapter","chapters","config","this","mapStart","location","mapboxgl","accessToken","map","Map","container","mapContainer","style","zoom","pitch","bearing","marker","Marker","setLayerOpacity","layer","layerType","getLayer","type","getLayerPaintType","forEach","prop","setPaintProperty","opacity","showMarkers","setLngLat","addTo","setState","bind","scroller","scrollama","on","setup","step","offset","progress","onStepEnter","response","chapter","find","chap","element","flyTo","onChapterEnter","length","onStepExit","onChapterExit","window","addEventListener","resize","subtitle","byline","ref","el","alignment","key","footer","Component","Boolean","hostname","match","mapAnimation","speed","duratiion","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62a77c6d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport mapboxgl from \"mapbox-gl\";\nimport scrollama from \"scrollama\";\n\nconst layerTypes = {\n  fill: [\"fill-opacity\"],\n  line: [\"line-opacity\"],\n  circle: [\"circle-opacity\", \"circle-stroke-opacity\"],\n  symbol: [\"icon-opacity\", \"text-opacity\"],\n  raster: [\"raster-opacity\"],\n  \"fill-extrusion\": [\"fill-extrusion-opacity\"],\n};\n\nconst alignments = {\n  left: \"lefty\",\n  center: \"centered\",\n  right: \"righty\",\n};\n\nconst transformRequest = (url) => {\n  const hasQuery = url.indexOf(\"?\") !== -1;\n  const suffix = hasQuery\n    ? \"&pluginName=journalismScrollytelling\"\n    : \"?pluginName=journalismScrollytelling\";\n  return {\n    url: url + suffix,\n  };\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentChapter: props.chapters[0],\n    };\n    // this.setState = this.setState.bind(this);\n  }\n\n  componentDidMount() {\n    const config = this.props;\n    const mapStart = config.chapters[0].location;\n\n    mapboxgl.accessToken = config.accessToken;\n\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: config.style,\n      center: mapStart.center,\n      zoom: mapStart.zoom,\n      pitch: mapStart.pitch,\n      bearing: mapStart.bearing,\n      transformRequest: transformRequest,\n    });\n\n    const marker = new mapboxgl.Marker();\n    if (config.showMarkers) {\n      marker.setLngLat(mapStart.center).addTo(map);\n    }\n\n    function getLayerPaintType(layer) {\n      var layerType = map.getLayer(layer).type;\n      return layerTypes[layerType];\n    }\n\n    function setLayerOpacity(layer) {\n      var paintProps = getLayerPaintType(layer.layer);\n      paintProps.forEach(function (prop) {\n        map.setPaintProperty(layer.layer, prop, layer.opacity);\n      });\n    }\n\n    const setState = this.setState.bind(this);\n\n    // instantiate the scrollama\n    const scroller = scrollama();\n\n    map.on(\"load\", function () {\n      // setup the instance, pass callback functions\n      scroller\n        .setup({\n          step: \".step\",\n          offset: 0.5,\n          progress: true,\n        })\n        .onStepEnter((response) => {\n          const chapter = config.chapters.find(\n            (chap) => chap.id === response.element.id\n          );\n          setState({ currentChapter: chapter });\n          map.flyTo(chapter.location);\n          if (config.showMarkers) {\n            marker.setLngLat(chapter.location.center);\n          }\n          if (chapter.onChapterEnter.length > 0) {\n            chapter.onChapterEnter.forEach(setLayerOpacity);\n          }\n        })\n        .onStepExit((response) => {\n          var chapter = config.chapters.find(\n            (chap) => chap.id === response.element.id\n          );\n          if (chapter.onChapterExit.length > 0) {\n            chapter.onChapterExit.forEach(setLayerOpacity);\n          }\n        });\n      // addLine3();\n    });\n\n    window.addEventListener(\"resize\", scroller.resize);\n  }\n\n  render() {\n    const config = this.props;\n    const theme = config.theme;\n    const currentChapterID = this.state.currentChapter.id;\n    return (\n      <div>\n        {config.title && (\n          <div id=\"header\" className={theme}>\n            <h1>{config.title}</h1>\n            {config.subtitle && <h2>{config.subtitle}</h2>}\n            {config.byline && <p>{config.byline}</p>}\n            <img\n              src=\"./giniw.jpg\"\n              alt=\"Water Protectors stop construction on Line 3.\"\n            />\n            vvv Scroll vvv\n          </div>\n        )}\n        <div\n          ref={(el) => (this.mapContainer = el)}\n          className=\"absolute top right left bottom\"\n        />\n        <div id=\"story\">\n          <div id=\"features\" className={alignments[config.alignment]}>\n            {config.chapters.map((chapter) => (\n              <Chapter\n                key={chapter.id}\n                theme={theme}\n                {...chapter}\n                currentChapterID={currentChapterID}\n              />\n            ))}\n          </div>\n          {config.footer && (\n            <div id=\"footer\" className={theme}>\n              <p>{config.footer}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Chapter({ id, theme, title, image, description, currentChapterID }) {\n  const classList = id === currentChapterID ? \"step active\" : \"step\";\n  return (\n    <div id={id} className={classList}>\n      <div className={theme}>\n        {title && <h3 className=\"title\">{title}</h3>}\n        {image && <img src={image} alt={title}></img>}\n        {description && <p>{description}</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var config = {\n  style: \"mapbox://styles/shane98c/ckii8dkdt2k8y19qyhtov5dda\",\n  accessToken:\n    \"pk.eyJ1Ijoic2hhbmU5OGMiLCJhIjoiY2o3dzk2anVtMG5hOTMzbzIyZzZja3ZhMyJ9.JdJS0IEbZZ7S6r3Nr87MJg\",\n  showMarkers: false,\n  theme: \"dark\",\n  alignment: \"right\",\n  // use3dTerrain: true,\n  title: \"Line 3 Tar Sands Oil Pipeline\",\n  //   subtitle: \"A descriptive and interesting subtitle to draw in the reader\",\n  //   byline: \"By a Digital Storyteller\",\n  //   footer: \"Source: source citations, etc.\",\n  chapters: [\n    {\n      id: \"tarSands\",\n      title: \"Canadian Tar Sands are extremely gross and bad\",\n      image: \"./tar.jpeg\",\n      description: \"They should stay where they are.\",\n      mapAnimation: \"easeTo\",\n      location: {\n        center: [-111.56756, 57.325189],\n        zoom: 17,\n        pitch: 0,\n        bearing: 0,\n      },\n      onChapterEnter: [\n        {\n          layer: \"mapbox-satellite\",\n          opacity: 1,\n        },\n      ],\n      onChapterExit: [\n        // {\n        //   layer: \"mapbox-satellite\",\n        //   opacity: 0,\n        // },\n      ],\n    },\n    {\n      id: \"expandTar\",\n      title: \"Canadian Tar Sands are extremely gross and bad\",\n      // image: \"./tar.jpeg\",\n      description:\n        \"If we have any chance of keeping our climeate habitable they must stay in the ground\",\n      location: {\n        center: [-111.556856, 57.311989],\n        zoom: 12,\n        pitch: 60,\n        bearing: 0,\n        speed: 0.2,\n      },\n      onChapterEnter: [\n        {\n          layer: \"mapbox-satellite\",\n          opacity: 1,\n        },\n      ],\n      onChapterExit: [\n        {\n          layer: \"mapbox-satellite\",\n          opacity: 0,\n        },\n      ],\n    },\n    {\n      id: \"leavingTar\",\n      title: \"Pipelines are used to transport a toxic slurry\",\n      // image: \"./tar.jpeg\",\n      description: \"Across our entire continent\",\n      mapAnimation: \"jumpTo\",\n\n      location: {\n        center: [-100.57581, 49.34759],\n        zoom: 5,\n        pitch: 0,\n        // bearing: 180,\n        // speed: 0.4,\n      },\n      onChapterEnter: [\n        {\n          layer: \"vt-pipeline\",\n          opacity: 1,\n        },\n      ],\n      onChapterExit: [\n        // {\n        //   layer: \"mapbox-satellite\",\n        //   opacity: 0,\n        // },\n      ],\n    },\n    {\n      id: \"spills\",\n      title: \"Pipelines spill, everytime\",\n      // image: \"./tar.jpeg\",\n      description: \"These are spills within the US\",\n      location: {\n        center: [-97.61394, 38.46505],\n        zoom: 4,\n        pitch: 0,\n        bearing: 0,\n        speed: 0.5,\n      },\n      onChapterEnter: [\n        {\n          layer: \"spills\",\n          \"circle-opacity\": 1,\n        },\n      ],\n      onChapterExit: [\n        {\n          layer: \"spills\",\n          opacity: 0,\n        },\n      ],\n    },\n    {\n      id: \"other-id5\",\n      title: \"These Tarsands aren't for Minnesota\",\n      // image: \"./tar.jpeg\",\n      description: \"Yet the risks are.\",\n      location: {\n        center: [-94, 46.803],\n        zoom: 6,\n        pitch: 0,\n        bearing: 0,\n        speed: 0.5,\n      },\n      onChapterEnter: [],\n      onChapterExit: [\n        {\n          layer: \"vt-pipeline\",\n          opacity: 0,\n        },\n      ],\n    },\n    {\n      id: \"other-id3\",\n      title: \"Pipelines cross hundreds of waterbodies\",\n      // image: \"./tar.jpeg\",\n      description: \"Risking drinking water, and the entire Mississippi River.\",\n      alignment: \"left\",\n      location: {\n        center: [-94, 46.803],\n        zoom: 7,\n        pitch: 0,\n        bearing: 0,\n        speed: 0.5,\n      },\n      onChapterEnter: [\n        {\n          layer: \"l3permroute\",\n          \"circle-opacity\": 1,\n        },\n        {\n          layer: \"streams\",\n          opacity: 1,\n        },\n      ],\n      onChapterExit: [],\n    },\n    {\n      id: \"palisade\",\n      title: \"Waterprotectors are fighting for a future for all of us\",\n      // image: \"./tar.jpeg\",\n      description:\n        \"At the site of one of two locations where the proposed pipeline crosses the Mississippii River.\",\n      location: {\n        center: [-93.34358, 46.8377],\n        zoom: 10.5,\n        pitch: 0,\n        bearing: 0,\n        speed: 0.5,\n      },\n      onChapterEnter: [\n        {\n          layer: \"l3permroute\",\n          \"circle-opacity\": 1,\n        },\n        {\n          layer: \"mapbox-satellite\",\n          opacity: 1,\n          duratiion: 2000,\n        },\n        {\n          layer: \"streams\",\n          opacity: 0,\n        },\n      ],\n      onChapterExit: [],\n    },\n  ],\n};\n\nexport default config;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport config from './config.js';\n\n\n\nReactDOM.render(<App {...config}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}